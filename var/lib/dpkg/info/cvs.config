#!/bin/sh

# $Debian: cvs/debian/config,v 1.1 2001/04/20 16:00:54 epg Exp $

# Config script for CVS using debconf
. /usr/share/debconf/confmodule
db_version 2.0 || [ $? -lt 30 ]

# Get the repositories list.
get_repositories ()
{
OK=0
while [ $OK -eq 0 ]; do
	db_input medium cvs/repositories ||:
	db_go ||:
	db_get cvs/repositories
	REPOS="$RET"
	BAD=""
	IFS=':'
	for i in $RET; do
		if [ ! -d "$i" ]; then
			if [ ! -z "$BAD" ]; then
				BAD="$BAD:$i"
				BADDESC="$BADDESC, $i"
			else
				BAD="$i"
				BADDESC="$i"
			fi
		fi
	done
	IFS=' 	\
'
	if [ ! -z "$BAD" ]; then
		IGNORE=0
		db_subst cvs/badrepositories badreps "$BADDESC"
		db_input medium cvs/badrepositories || if [ $? -eq 30 ]; then
			IGNORE=1
		fi
		db_go ||:
		db_get cvs/badrepositories
		if [ "$RET" = "reenter" -a $IGNORE -eq 0 ]; then
			db_fset cvs/repositories isdefault true
			OK=0
			continue
		else
			OK=1
		fi
	else
		OK=1
	fi
done
	IFS=' 	\
'
}

# Get history rotation information.
get_history ()
{
	db_get cvs/repositories
	REPOS="$RET"
	db_input low cvs/rotatehistory ||:
	db_go ||:
	db_get cvs/rotatehistory
	ROTHIST="$RET"
	if [ x"$ROTHIST" = x"yes" -o x"$ROTHIST" = x"individual" ]; then
		db_input low cvs/rotatekeep_nondefault ||:
		db_go ||:
	else
		db_set cvs/rotatekeep_nondefault no
		db_fset cvs/rotatekeep_nondefault isdefault true
	fi
	db_get cvs/rotatekeep_nondefault
	ROTKEEP="$RET"
	if [ x"$ROTHIST" = x"individual" -o x"$ROTHIST" = x"yes" -a x"$ROTKEEP" = x"individual" ]; then
		db_beginblock
		IFS=':'
		for i in $REPOS; do
			IFS=' 	\
'
			RNAME="`echo "$i" | sed -e 's:/:_:g'`"
			DO_RK=1
			if [ x"$ROTHIST" = x"individual" ]; then
				db_register cvs/rotate_individual "cvs/rotate/$RNAME"
				db_subst "cvs/rotate/$RNAME" repos "$i"
				db_input medium "cvs/rotate/$RNAME" ||:
			fi
		done
		db_endblock
		db_go ||:
		db_beginblock
		IFS=':'
		for i in $REPOS; do
			IFS=' 	\
'
			RNAME="`echo "$i" | sed -e 's:/:_:g'`"
			DO_RK=1
			if [ x"$ROTHIST" = x"individual" ]; then
				db_get "cvs/rotate/$RNAME"
				if [ x"$RET" = x"false" ]; then
					DO_RK=0
				fi
			fi
			if [ "$ROTKEEP" = "individual" -a $DO_RK -eq 1 ]; then
				db_register cvs/rotatekeep_individual "cvs/rotatekeep/$RNAME"
				db_subst "cvs/rotatekeep/$RNAME" repos "$i"
				db_input medium "cvs/rotatekeep/$RNAME" ||:
			fi
		done
		db_endblock
		db_go ||:
	fi
}

# Set up the pserver.
setup_pserver ()
{
	db_input medium cvs/pserver ||:
	db_go ||:
	db_get cvs/pserver
	if [ x"$RET" = x"true" ]; then
		db_input low cvs/pserver_repos ||:
		db_go ||:
		db_get cvs/pserver_repos
		if [ x"$RET" = x"some" ]; then
			db_beginblock
			db_get cvs/repositories
			REPOS="$RET"
			IFS=':'
			for i in $REPOS; do
				IFS=' 	\
'
				RNAME="`echo "$i" | sed -e 's:/:_:g'`"
				db_register cvs/pserver_repos_individual "cvs/pserver/$RNAME"
				db_subst "cvs/pserver/$RNAME" repos "$i"
				db_input medium "cvs/pserver/$RNAME" ||:
			done
			db_endblock
			db_go ||:
		fi
		db_input low cvs/pserver_setspawnlimit ||:
		db_go ||:
		db_get cvs/pserver_setspawnlimit
		if [ "$RET" = "true" ]; then
			db_input low cvs/pserver_spawnlimit ||:
			db_go ||:
		fi
	fi
}

# Import old settings from cvs.conf.
import_cvsconf ()
{
	if [ -f /etc/cvs.conf ]; then
	  . /etc/cvs.conf
	fi
	if [ -f /etc/cvs.conf.import ]; then
	  . /etc/cvs.conf.import
	fi
	db_set cvs/repositories "$CVS_REPOS"
	if [ x"$CVS_ROTATE" = x"no" ]; then
		db_set cvs/rotatehistory no
	else
		if [ x"$CVS_ROTDIRS" != x"$CVS_REPOS" ]; then
			db_set cvs/rotatehistory individual
			IFS=':'
			for i in $CVS_REPOS; do
				IFS=' 	\
'
				RNAME="`echo "$i" | sed -e 's:/:_:g'`"
				db_register cvs/rotate_individual "cvs/rotate/$RNAME"
				db_subst "cvs/rotate/$RNAME" repos "$i"
				db_set "cvs/rotate/$RNAME" false
			done
			IFS=':'
			for i in $CVS_ROTDIRS; do
				IFS=' 	\
'
				RNAME="`echo "$i" | sed -e 's:/:_:g'`"
				db_set "cvs/rotate/$RNAME" true
			done
		else
			db_set cvs/rotatehistory yes
		fi
		if [ x"$CVS_ROTATE" = x"yes" ]; then
			db_set cvs/rotatekeep_nondefault no
		else
			db_set cvs/rotatekeep_nondefault individual
			# Advanced syntax
			OLDIFS="$IFS"
			IFS=": 	"
			SAME=1
			set -- $CVS_ROTATE
			LAST="$1"
			DIRS="$CVS_ROTDIRS"
			for i in $CVS_ROTATE; do
				if [ x"$i" != x"$LAST" -a x"$i" != x"" ]; then
					SAME=0
				fi
			done
			if [ $SAME -eq 1 ]; then
				if [ x"$LAST" != x"n" ]; then
					db_set cvs/rotatekeep_nondefault yes
					db_set cvs/rotatekeep "$LAST"
				else
					db_set cvs/rotatekeep_nondefault no
				fi
			else
				for i in $CVS_ROTATE; do
					IFS="$OLDIFS"
					DIR="`echo $DIRS | sed 's/\([^:]*\):.*/\1/'`"
					DIRS="`echo $DIRS | sed 's/[^:]*:\(.*\)/\1/'`"
					RNAME="`echo "$DIR" | sed -e 's:/:_:g'`"
					db_register cvs/rotatekeep_individual "cvs/rotatekeep/$RNAME"
					db_subst "cvs/rotatekeep/$RNAME" repos "$DIR"
					case "$i" in
						n)
						db_set "cvs/rotate/$RNAME" false
						;;
						
						[0-9]*)
						db_set "cvs/rotatekeep/$RNAME" $i
						;;
					esac
				done
			fi
		fi
	fi
	if [ x"$CVS_ENAB_PSERV" = x"yes" ]; then
		db_set cvs/pserver true
		if [ x"$CVS_PSERV_REPOS" != x"$CVS_REPOS" ]; then
			db_set cvs/pserver_repos some
			IFS=':'
			for i in $CVS_REPOS; do
				IFS=' 	\
'
				RNAME="`echo "$i" | sed -e 's:/:_:g'`"
				db_register cvs/pserver_repos_individual "cvs/pserver/$RNAME"
				db_subst "cvs/pserver/$RNAME" repos "$i"
				db_set "cvs/pserver/$RNAME" false
			done
			IFS=':'
			for i in $CVS_PSERV_REPOS; do
				IFS=' 	\
'
				RNAME="`echo "$i" | sed -e 's:/:_:g'`"
				db_set "cvs/pserver/$RNAME" true
			done
		else
			db_set cvs/pserver_repos all
		fi
		if [ $CVSCONF_VERSION -ge 2 ]; then
			if [ x"$CVS_PSERV_RESPAWN" != x"off" -a
				x"$CVS_PSERV_RESPAWN" != x"off-def" ]; then
				db_set cvs/pserver_setspawnlimit true
				db_set cvs/pserver_spawnlimit "$CVS_PSERV_RESPAWN"
			else
				db_set cvs/pserver_setspawnlimit false
			fi
		else
			db_set cvs/pserver_setspawnlimit false
		fi
	else
		db_set cvs/pserver false
	fi
	if [ -f /etc/cvs.conf.import ]; then
		rm -f /etc/cvs.conf.import
	fi
}

## Main program

# Check if we need to import the old /etc/cvs.conf
if [ -f /etc/cvs.conf -o -f /etc/cvs.conf.import ]; then
	db_get cvs/read_cvsconf
	if [ x"$RET" = x"false" ]; then
		import_cvsconf
		db_set cvs/read_cvsconf true
	fi
fi

get_repositories
get_history
setup_pserver

# End of file.
